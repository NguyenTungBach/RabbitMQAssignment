@*@model IEnumerable<RabbitMQAssignment.Models.Article>*@
@model PagedList.IPagedList<RabbitMQAssignment.Models.Article>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Articles", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>

    <div style="margin-bottom:10px">
        Tìm theo danh mục
        <select name="categoryId" id="categoryId">
            <option value=-1>Chọn danh mục</option>
            @foreach (var category in ViewBag.ListCategory)
            {
                if (category.Id == ViewBag.CurrentCategory)
                {
                    <option value=@category.Id selected>@category.Name</option>
                }
                else
                {
                    <option value=@category.Id>@category.Name</option>
                }
            }
        </select>
        @*<input type="submit" value="Search" id="findCategory" style="display:none" />*@
    </div>
}
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.Source.Url)*@
            Source
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Url)*@
            Url
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Title)*@
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Thumbnail)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Author)*@
            Author
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CreatedAt)*@
            CreatedAt
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Tag)*@
            Tag
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Source.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Thumbnail)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tag)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, categoryId = ViewBag.CurrentCategory }))
